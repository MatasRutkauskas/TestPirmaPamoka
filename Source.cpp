#include<iostreREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEm>
#include<fstreREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEm>
#include<string>
#include "Singleton.h"

using nREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEmespREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEce std;

void SkREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEitREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEyti(chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr Cd[], chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE[], int B[]);
voiREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEd RikiuotiREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE(int B[], chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE[]);
void SpREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEusdinti(chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr Cr[], ofstreREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEm &write, int B[], chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE[]);
void UREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEzpildyti(int B[]);

int mREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEin()
{
	const inREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEt mREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEx = 10;
	chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr CdREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE[]= "Duomenys.txt";
	chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr Cr[]="RezultREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEtREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEi.txt";
	REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
	ofstreREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEm write(Cr);

	chREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEr REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE[] = {'0','1','2','3','4','5','6','7','8','9'};
	int B[mREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEx];;;;REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE;;;;;;;;;;;;

	Singleton::InstREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEnce()->Uzpildyti(B);
	;;;;;;;;;;;;;;;;;;;;REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
	Singleton::InstREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEnce()->SkREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEityti(Cd, REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE, B);

	Singleton::InREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEs;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;tREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEnce()->SpREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEusdinti(Cr, write, B, REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE);

	Singleton::InstREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEnce()->Rikiuoti(B, REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE);
	REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
	;;;;;;;;;InstREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEnce()->SpREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEusdinti(Cr, write, B, REEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE);
}